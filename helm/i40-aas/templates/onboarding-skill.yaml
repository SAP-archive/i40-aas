---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-onboarding-skill
  labels:
    service: onboarding-skill
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  ports:
    - targetPort: endpoint
      port: 80
      protocol: TCP
  selector:
    service: onboarding-skill
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-onboarding-skill
  labels:
    service: onboarding-skill
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      service: onboarding-skill
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: onboarding-skill
        {{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - name: onboarding-skill
          image: "{{ .Values.image.repository }}/i40-aas-onboarding-skill:{{ .Values.image.release }}"
          securityContext:
            runAsUser: 1001
            readOnlyRootFilesystem: true
          ports:
            - name: endpoint
              containerPort: 3000
          env:
            - name: LOGGING_LOGLEVEL
              value: {{ .Values.logging.logLevel | quote }}
            - name: LOGGING_LOGOUTPUT
              value: {{ .Values.logging.logOutput | quote }}
            - name: SKILLS_ONBOARDING_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-host-collection
                  key: SKILLS_ONBOARDING_DATABASE_HOST
            - name: SKILLS_ONBOARDING_DATABASE_PORT
              value: "{{ .Values.onboardingskillmongodb.service.port }}/?authSource={{ .Values.onboardingskillmongodb.mongodbDatabase }}"
            - name: SKILLS_ONBOARDING_DATABASE_NAME
              value: {{ .Values.onboardingskillmongodb.mongodbDatabase | quote }}
            - name: SKILLS_ONBOARDING_DATABASE_USER
              value: {{ .Values.onboardingskillmongodb.mongodbUsername | quote }}
            - name: SKILLS_ONBOARDING_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-onboardingskillmongodb
                  key: mongodb-password
            - name: CORE_BROKER_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-host-collection
                  key: CORE_BROKER_HOST
            - name: CORE_BROKER_PORT
              value: {{ .Values.rabbitmq.service.port | quote }}
            - name: CORE_EGRESS_EXCHANGE
              value: {{ .Values.core.egress.broker.exchange | quote }}
            - name: CORE_EGRESS_ROUTINGKEY
              value: {{ .Values.core.egress.broker.routingKey | quote }}
            - name: CORE_INGRESS_EXCHANGE
              value: {{ .Values.core.ingress.broker.exchange | quote }}
            - name: CORE_ENDPOINT_RESOLVER_QUEUE
              value: {{ .Values.core.endpointResolver.queue | quote }}
            - name: SKILLS_ONBOARDING_REQUEST_APPROVAL
              value: {{ .Values.skills.onboarding.requestApproval | quote }}
            - name: SKILLS_ONBOARDING_REQUEST_TYPE
              value: {{ .Values.skills.onboarding.requestType | quote }}
            - name: SKILLS_ONBOARDING_STATES_COLLECTION
              value: {{ .Values.skills.onboarding.statesCollection | quote }}
            - name: SKILLS_ONBOARDING_ROOT_TOPIC
              value: {{ .Values.skills.onboarding.rootTopic | quote }}
            - name: SKILLS_ONBOARDING_ROLE
              value: {{ .Values.skills.onboarding.role | quote }}
            - name: SKILLS_ONBOARDING_URI
              value: {{ .Values.skills.onboarding.uri | quote }}
            - name: CORE_DATA_MANAGER_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-host-collection
                  key: CORE_DATA_MANAGER_HOST
            - name: CORE_DATA_MANAGER_PORT
              value: {{ .Values.core.dataManager.port | quote }}
            - name: CORE_DATA_MANAGER_SUBMODELS_ROUTE
              value: {{ .Values.core.dataManager.submodelsRoute | quote }}
            - name: TLS_ENABLED
              value: {{ .Values.security.tls.enabled | quote }}
            - name: TLS_CERTFILE
              value: {{ .Values.security.tls.crtfile | quote }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-core-egress
            - secretRef:
                name: {{ .Release.Name }}-core-ingress
            - secretRef:
                name: {{ .Release.Name }}-core-data-manager
          volumeMounts:
          {{- if .Values.security.certificates }}
            - name: certs
              mountPath: "/etc/ssl/certs"
              readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.resources.ts | nindent 12 }}
      volumes:
      {{- if .Values.security.certificates }}
        - name: certs
          secret:
            secretName: {{ .Values.security.certificates.secretName }}
            optional: true
      {{- end }}
---