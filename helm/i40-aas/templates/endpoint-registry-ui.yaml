---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-endpoint-registry-ui
  labels:
    service: endpoint-registry-ui
    {{- include "i40-aas.labels" . | nindent 4 }}
  annotations:
    ingress.kubernetes.io/path-rewrite: "/([^/]*)(/?.*) \\2"
spec:
  ports:
  - targetPort: endpoint-ui
    port: {{ .Values.core.registries.endpointsUI.port }}
    protocol: TCP
  selector:
    service: endpoint-registry-ui
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-endpoint-registry-ui
  labels:
    service: endpoint-registry-ui
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      service: endpoint-registry-ui
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: endpoint-registry-ui
        {{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      # securityContext:
      #  runAsNonRoot: true
      containers:
      - name: endpoint-registry-ui
        image: "{{ .Values.image.repository }}/i40-aas-endpoint-registry-ui:{{ .Values.image.release }}"
        # securityContext:
          # runAsUser: 1001
          # readOnlyRootFilesystem: true
        ports:
        - name: endpoint-ui
          containerPort: {{ .Values.core.registries.endpointsUI.port }}
        env:
        - name: LOGGING_LOGLEVEL
          value: {{ .Values.logging.logLevel | quote }}
        - name: LOGGING_LOGOUTPUT
          value: {{ .Values.logging.logOutput | quote }}
        - name: UI5_MIDDLEWARE_SIMPLE_PROXY_BASEURI
          value: {{ .Values.core.registries.endpointsUI.baseuri | quote }}
        - name: UI5_MIDDLEWARE_SIMPLE_PROXY_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-core-registries-endpoints
              key: CORE_REGISTRIES_ENDPOINTS_USER
        - name: UI5_MIDDLEWARE_SIMPLE_PROXY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-core-registries-endpoints
              key: CORE_REGISTRIES_ENDPOINTS_PASSWORD
         - name: TLS_ENABLED
           value: {{ .Values.security.tls.enabled | quote }}
         - name: TLS_KEYFILE
           value: {{ .Values.security.tls.keyfile | quote }}
         - name: TLS_CERTFILE
           value: {{ .Values.security.tls.crtfile | quote }}
         volumeMounts:
         {{- if .Values.security.certificates }}
         - name: certs
           mountPath: "/etc/ssl/certs"
           readOnly: true
         {{- end }}
        resources:
          {{- toYaml .Values.resources.ts | nindent 10 }}
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: endpoint-ui
        #     {{- if .Values.security.tls.enabled }}
        #     scheme: HTTPS
        #     {{- else }}
        #     scheme: HTTP
        #     {{- end }}
        #   initialDelaySeconds: 600
        #   periodSeconds: 60
      volumes:
      {{- if .Values.security.certificates }}
      - name: certs
        secret:
          secretName: {{ .Values.security.certificates.secretName }}
          optional: true
      {{- end }}
---
