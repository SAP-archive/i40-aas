apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  labels:
    service: ingress
    {{- include "i40-aas.labels" . | nindent 4 }}
  annotations:
    ingress.kubernetes.io/ingress.class: "haproxy"
    {{- if .Values.security.tls.enabled }}
    ingress.kubernetes.io/server-ssl: "true"
    {{- end }}
    {{- if .Values.ingress.certManager }}
    cert-manager.io/cluster-issuer: {{ required "A valid .Values.ingress.certManager.clusterIssuer entry required!" .Values.ingress.certManager.clusterIssuer }}
    cert-manager.io/acme-challenge-type: {{ required "A valid .Values.ingress.certManager.acmeChallengeType entry required!" .Values.ingress.certManager.acmeChallengeType }}
    {{- end }}
spec:
  {{- if and .Values.ingress.certManager .Values.ingress.host }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: tls-secret
  {{- end}}
  rules:
  - {{- if .Values.ingress.host }}
    host: {{ .Values.ingress.host }}
    {{- end }}
    http:
      paths:
      - backend:
          serviceName: {{ .Release.Name }}-grpc-endpoint-ingress
          servicePort: {{ .Values.core.ingress.grpc.port }}
      - path: /https-endpoint
        backend:
          serviceName: {{ .Release.Name }}-https-endpoint-ingress
          servicePort: {{ .Values.core.ingress.http.port }}
      - path: /adapter-registry
        backend:
          serviceName: {{ .Release.Name }}-adapter-registry
          servicePort: {{ .Values.core.registries.adapters.port }}
      - path: /endpoint-registry
        backend:
          serviceName: {{ .Release.Name }}-endpoint-registry
          servicePort: {{ .Values.core.registries.endpoints.port }}
      - path: /endpoint-registry-ui
        backend:
          serviceName: {{ .Release.Name }}-endpoint-registry-ui
          servicePort: {{ .Values.core.registries.endpointsUI.port }}
      - path: /data-manager
        backend:
          serviceName: {{ .Release.Name }}-data-manager
          servicePort: {{ .Values.core.dataManager.port }}
      - path: /storage-adapter-mongodb
        backend:
          serviceName: {{ .Release.Name }}-storage-adapter-mongodb
          servicePort: {{ .Values.applicationAdapters.mongoDb.port }}
---
