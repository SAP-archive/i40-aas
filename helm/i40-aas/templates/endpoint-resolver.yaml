---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-endpoint-resolver
  labels:
    service: endpoint-resolver
    {{- include "i40-aas.labels" . | nindent 4 }}
data:
  # Logging
  LOG_LEVEL: {{ .Values.logging.log_level }}
  LOG_OUTPUT: {{ .Values.logging.log_output }}
  # endpoint-resolver
  ENDPOINT_RESOLVER_AMQP_QUEUE: {{ .Values.endpointResolver.amqp.queue }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-endpoint-resolver
  labels:
    service: endpoint-resolver
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  ports:
  - targetPort: endpoint
    port: 80
    protocol: TCP
  selector:
    service: endpoint-resolver
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-endpoint-resolver
  labels:
    service: endpoint-resolver
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      service: endpoint-resolver
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
	service: endpoint-resolver
	{{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: endpoint-resolver
	image: "{{ .Values.image.repository }}/i40-aas-endpoint-resolver:{{ .Values.image.release }}"
	env:
	- name: RABBITMQ_HOST
	  valueFrom:
	    configMapKeyRef:
	      name: {{ .Release.Name }}-rabbitmq
	      key: RABBITMQ_AMQP_HOST
	- name: RABBITMQ_PORT
	  valueFrom:
	    configMapKeyRef:
	      name: {{ .Release.Name }}-rabbitmq
	      key: RABBITMQ_AMQP_PORT
	envFrom:
	- secretRef:
	    name: {{ .Release.Name }}-rabbitmq-egress-credentials
	- configMapRef:
	    name: {{ .Release.Name }}-rabbitmq
	- secretRef:
	    name: {{ .Release.Name }}-endpoint-resolver
	- configMapRef:
	    name: {{ .Release.Name }}-endpoint-resolver
	- secretRef:
	    name: {{ .Release.Name }}-endpoint-registry
	- configMapRef:
	    name: {{ .Release.Name }}-endpoint-registry
	volumeMounts:
	- name: certs
	  mountPath: "/certs"
	  readOnly: true
	resources:
	  {{- toYaml .Values.resources | nindent 10 }}
#        livenessProbe:
#          httpGet:
#            path: /health
#            port: endpoint
#          initialDelaySeconds: 600
#          periodSeconds: 60
      volumes:
      - name: certs
	optional: true
	secret:
	  secretName: {{ .Values.certificates.secretName }}
---
