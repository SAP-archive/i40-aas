---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-endpoint-registry-postgres
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
data:
  # Networking
  ENDPOINT_REGISTRY_POSTGRES_HOST: {{ .Release.Name }}-postgres-0.{{ .Release.Name }}-postgres
  ENDPOINT_REGISTRY_POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-endpoint-registry-postgres
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
type: Opaque
stringData:
  # Authentication  
  ENDPOINT_REGISTRY_POSTGRES_DB: {{ .Values.config.endpointRegistryPostgresDB }}
  ENDPOINT_REGISTRY_POSTGRES_USER: {{ .Values.credentials.endpointRegistryPostgresUser | default (randAlphaNum 20) }}
  ENDPOINT_REGISTRY_POSTGRES_PASSWORD: {{ .Values.credentials.endpointRegistryPostgresPassword | default (randAlphaNum 20) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-endpoint-registry-pgadmin
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
type: Opaque
stringData:
  ENDPOINT_REGISTRY_DEFAULT_EMAIL: {{ .Values.credentials.endpointRegistryDefaultEmail | default (randAlphaNum 20) }}
  ENDPOINT_REGISTRY_DEFAULT_PASSWORD: {{ .Values.credentials.endpointRegistryDefaultPassword | default (randAlphaNum 20) }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  - protocol: TCP
    port: 5432
    targetPort: database
  selector:
    service: endpoint-registry-postgres
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-pgadmin
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: ui
  selector:
    service: endpoint-registry-postgres
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Release.Name }}-postgres
  replicas: 1
  selector:
    matchLabels:
      service: endpoint-registry-postgres
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: endpoint-registry-postgres
        {{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: postgres:alpine
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: database
              containerPort: 5432
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-endpoint-registry-postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: {{ .Release.Name }}-endpoint-registry-postgres
        - name: pgadmin
          image: dpage/pgadmin4
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: ui
              containerPort: 80
          env:
          - name: PGADMIN_DEFAULT_EMAIL
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-endpoint-registry-pgadmin
                key: ENDPOINT_REGISTRY_DEFAULT_EMAIL
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-endpoint-registry-pgadmin
                key: ENDPOINT_REGISTRY_DEFAULT_PASSWORD
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-endpoint-registry-postgres
      labels:
        service: endpoint-registry-postgres
        {{- include "i40-aas.labels" . | nindent 8 }}
    spec:
      storageClassName: {{ .Values.storageClassName }}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
---
