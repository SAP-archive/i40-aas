---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  - protocol: TCP
    port: {{ .Values.core.registries.endpoints.database.port }}
    targetPort: database
  selector:
    service: endpoint-registry-postgres
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-pgadmin
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: ui
  selector:
    service: endpoint-registry-postgres
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    service: endpoint-registry-postgres
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Release.Name }}-postgres
  replicas: 1
  selector:
    matchLabels:
      service: endpoint-registry-postgres
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: endpoint-registry-postgres
        {{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: postgres:alpine
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: database
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-core-registries-endpoints-database-super
                  key: CORE_REGISTRIES_ENDPOINTS_DATABASE_SUPER_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-core-registries-endpoints-database-super
                  key: CORE_REGISTRIES_ENDPOINTS_DATABASE_SUPER_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: {{ .Release.Name }}-endpoint-registry-postgres
        - name: pgadmin
          image: dpage/pgadmin4
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: ui
              containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-core-registries-endpoints-database-pgadmin
                  key: CORE_REGISTRIES_ENDPOINTS_DATABASE_PGADMIN_USER
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-core-registries-endpoints-database-pgadmin
                  key: CORE_REGISTRIES_ENDPOINTS_DATABASE_PGADMIN_PASSWORD
  volumeClaimTemplates:
    - metadata:
        name: {{ .Release.Name }}-endpoint-registry-postgres
        labels:
          service: endpoint-registry-postgres
          {{- include "i40-aas.labels" . | nindent 8 }}
      spec:
        storageClassName: {{ .Values.storageClassName }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
---
