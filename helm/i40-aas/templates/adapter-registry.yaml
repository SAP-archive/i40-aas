---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-adapter-registry
  labels: 
    service: adapter-registry
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  - targetPort: endpoint
    port: {{ .Values.core.registries.adapters.port }}
    protocol: TCP
  selector:
    service: adapter-registry
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-adapter-registry-api
  labels: 
    service: adapter-registry
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  ports:
  - targetPort: endpoint
    port: {{ .Values.core.registries.adapters.port }}
    protocol: TCP
  selector:
    service: adapter-registry
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-adapter-registry
  labels: 
    service: adapter-registry
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Release.Name }}-adapter-registry
  replicas: 1
  selector:
    matchLabels:
      service: adapter-registry
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template: 
    metadata:
      labels:
        service: adapter-registry
        {{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: adapter-registry
        image: "{{ .Values.image.repository }}/i40-aas-adapter-registry:{{ .Values.image.release }}"
        ports: 
        - name: endpoint
          containerPort: {{ .Values.core.registries.adapters.port }}
        env:
        - name: LOGGING_LOGLEVEL
          value: {{ .Values.logging.logLevel | quote }}
        - name: LOGGING_LOGOUTPUT
          value: {{ .Values.logging.logOutput | quote }}
        - name: CORE_REGISTRIES_ADAPTERS_PORT
          value: {{ .Values.core.registries.adapters.port | quote }}
        - name: TLS_ENABLED
          value: {{ .Values.security.tls.enabled | quote }}
        - name: TLS_KEYFILE
          value: {{ .Values.security.tls.keyfile | quote }}
        - name: TLS_CERTFILE
          value: {{ .Values.security.tls.crtfile | quote }}        
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-core-registries-adapters
        resources:
          {{- toYaml .Values.resources.ts | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: endpoint
            {{- if .Values.security.tls.enabled }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
          initialDelaySeconds: 600
          periodSeconds: 60
        volumeMounts:
        - mountPath: /service/.node-persist
          name: {{ .Release.Name }}-adapter-registry
        {{- if .Values.security.certificates }}
        - name: certs
          mountPath: "/etc/ssl/certs"
          readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.security.certificates }}
      - name: certs
        secret:
          secretName: {{ .Values.security.certificates.secretName }}
          optional: true
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-adapter-registry
      labels:
        service: adapter-registry
        {{- include "i40-aas.labels" . | nindent 8 }}
    spec:
      storageClassName: {{ .Values.storageClassName }}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
---
