---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-https-endpoint-ingress
  labels: 
    service: https-endpoint-ingress
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  ports:
    - targetPort: endpoint
      port: {{ .Values.core.ingress.http.port }}
      protocol: TCP
  selector:
    service: https-endpoint-ingress
    {{- include "i40-aas.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-https-endpoint-ingress
  labels: 
    service: https-endpoint-ingress
    {{- include "i40-aas.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      service: https-endpoint-ingress
      {{- include "i40-aas.selectorLabels" . | nindent 6 }}
  template: 
    metadata:
      labels:
        service: https-endpoint-ingress
        {{- include "i40-aas.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - name: https-endpoint-ingress
          image: "{{ .Values.image.repository }}/i40-aas-https-endpoint-ingress:{{ .Values.image.release }}"
          securityContext:
            runAsUser: 1001
            readOnlyRootFilesystem: true
          ports:
            - name: endpoint
              containerPort: {{ .Values.core.ingress.http.port }}
          env:
            - name: LOGGING_LOGLEVEL
              value: {{ .Values.logging.logLevel | quote }}
            - name: LOGGING_LOGOUTPUT
              value: {{ .Values.logging.logOutput | quote }}
            - name: CORE_BROKER_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-host-collection
                  key: CORE_BROKER_HOST
            - name: CORE_BROKER_PORT
              value: {{ .Values.rabbitmq.service.port | quote }}
            - name: CORE_INGRESS_EXCHANGE
              value: {{ .Values.core.ingress.broker.exchange | quote }}
            - name: CORE_INGRESS_HTTP_PORT
              value: {{ .Values.core.ingress.http.port | quote }}
            - name: TLS_ENABLED
              value: {{ .Values.security.tls.enabled | quote }}
            - name: TLS_KEYFILE
              value: {{ .Values.security.tls.keyfile | quote }}
            - name: TLS_CERTFILE
              value: {{ .Values.security.tls.crtfile | quote }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-core-ingress
            - secretRef:
                name: {{ .Release.Name }}-core-ingress-http
          volumeMounts:
          {{- if .Values.security.certificates }}
            - name: certs
              mountPath: "/etc/ssl/certs"
              readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.resources.ts | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: endpoint
              {{- if .Values.security.tls.enabled }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 600
            periodSeconds: 60
      volumes:
      {{- if .Values.security.certificates }}
        - name: certs
          secret:
            secretName: {{ .Values.security.certificates.secretName }}
            optional: true
      {{- end }}
---
